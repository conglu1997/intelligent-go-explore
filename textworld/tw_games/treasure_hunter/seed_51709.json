{"version": 1, "world": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_0", "type": "c"}, {"name": "r_1", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_1", "type": "c"}, {"name": "r_2", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_2", "type": "c"}, {"name": "r_2", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_3", "type": "c"}, {"name": "r_9", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_4", "type": "c"}, {"name": "r_9", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_5", "type": "c"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_6", "type": "c"}, {"name": "r_18", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_7", "type": "c"}, {"name": "r_5", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_8", "type": "c"}, {"name": "r_17", "type": "r"}]}, {"name": "at", "arguments": [{"name": "f_0", "type": "f"}, {"name": "r_2", "type": "r"}]}, {"name": "at", "arguments": [{"name": "k_2", "type": "k"}, {"name": "r_18", "type": "r"}]}, {"name": "at", "arguments": [{"name": "o_0", "type": "o"}, {"name": "r_10", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_0", "type": "s"}, {"name": "r_1", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_1", "type": "s"}, {"name": "r_9", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_10", "type": "s"}, {"name": "r_16", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_2", "type": "s"}, {"name": "r_9", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_3", "type": "s"}, {"name": "r_4", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_4", "type": "s"}, {"name": "r_4", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_5", "type": "s"}, {"name": "r_19", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_6", "type": "s"}, {"name": "r_3", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_7", "type": "s"}, {"name": "r_7", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_8", "type": "s"}, {"name": "r_5", "type": "r"}]}, {"name": "at", "arguments": [{"name": "s_9", "type": "s"}, {"name": "r_14", "type": "r"}]}, {"name": "closed", "arguments": [{"name": "c_1", "type": "c"}]}, {"name": "closed", "arguments": [{"name": "c_4", "type": "c"}]}, {"name": "closed", "arguments": [{"name": "c_5", "type": "c"}]}, {"name": "closed", "arguments": [{"name": "c_7", "type": "c"}]}, {"name": "east_of", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_10", "type": "r"}, {"name": "r_9", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_11", "type": "r"}, {"name": "r_10", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_12", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_13", "type": "r"}, {"name": "r_12", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_15", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_19", "type": "r"}, {"name": "r_18", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_6", "type": "r"}]}, {"name": "east_of", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_2", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_10", "type": "r"}, {"name": "r_11", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_10", "type": "r"}, {"name": "r_12", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_10", "type": "r"}, {"name": "r_9", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_11", "type": "r"}, {"name": "r_10", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_11", "type": "r"}, {"name": "r_13", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_12", "type": "r"}, {"name": "r_10", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_12", "type": "r"}, {"name": "r_13", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_12", "type": "r"}, {"name": "r_15", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_12", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_13", "type": "r"}, {"name": "r_11", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_13", "type": "r"}, {"name": "r_12", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_13", "type": "r"}, {"name": "r_14", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_14", "type": "r"}, {"name": "r_13", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_15", "type": "r"}, {"name": "r_12", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_15", "type": "r"}, {"name": "r_16", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_15", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_16", "type": "r"}, {"name": "r_15", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_19", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_19", "type": "r"}, {"name": "r_18", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_12", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_9", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_6", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_9", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_6", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_6", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_6", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_15", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_10", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "c_6", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_1", "type": "k"}, {"name": "c_8", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_3", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "link", "arguments": [{"name": "r_0", "type": "r"}, {"name": "d_0", "type": "d"}, {"name": "r_1", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_0", "type": "r"}, {"name": "d_4", "type": "d"}, {"name": "r_3", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_1", "type": "r"}, {"name": "d_0", "type": "d"}, {"name": "r_0", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_15", "type": "r"}, {"name": "d_1", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_17", "type": "r"}, {"name": "d_2", "type": "d"}, {"name": "r_18", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_17", "type": "r"}, {"name": "d_3", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_18", "type": "r"}, {"name": "d_2", "type": "d"}, {"name": "r_17", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_3", "type": "r"}, {"name": "d_4", "type": "d"}, {"name": "r_0", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_1", "type": "d"}, {"name": "r_15", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_3", "type": "d"}, {"name": "r_17", "type": "r"}]}, {"name": "locked", "arguments": [{"name": "c_0", "type": "c"}]}, {"name": "locked", "arguments": [{"name": "c_3", "type": "c"}]}, {"name": "locked", "arguments": [{"name": "c_6", "type": "c"}]}, {"name": "locked", "arguments": [{"name": "c_8", "type": "c"}]}, {"name": "locked", "arguments": [{"name": "d_2", "type": "d"}]}, {"name": "locked", "arguments": [{"name": "d_3", "type": "d"}]}, {"name": "match", "arguments": [{"name": "k_0", "type": "k"}, {"name": "d_3", "type": "d"}]}, {"name": "match", "arguments": [{"name": "k_1", "type": "k"}, {"name": "c_6", "type": "c"}]}, {"name": "match", "arguments": [{"name": "k_2", "type": "k"}, {"name": "c_8", "type": "c"}]}, {"name": "match", "arguments": [{"name": "k_3", "type": "k"}, {"name": "d_2", "type": "d"}]}, {"name": "north_of", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_1", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_12", "type": "r"}, {"name": "r_10", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_13", "type": "r"}, {"name": "r_11", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_14", "type": "r"}, {"name": "r_13", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_15", "type": "r"}, {"name": "r_12", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_16", "type": "r"}, {"name": "r_15", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_9", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_6", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_2", "type": "c"}]}, {"name": "open", "arguments": [{"name": "d_0", "type": "d"}]}, {"name": "open", "arguments": [{"name": "d_1", "type": "d"}]}, {"name": "open", "arguments": [{"name": "d_4", "type": "d"}]}, {"name": "south_of", "arguments": [{"name": "r_0", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_10", "type": "r"}, {"name": "r_12", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_11", "type": "r"}, {"name": "r_13", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_12", "type": "r"}, {"name": "r_15", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_13", "type": "r"}, {"name": "r_14", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_15", "type": "r"}, {"name": "r_16", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_18", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_0", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_6", "type": "r"}, {"name": "r_7", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "south_of", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_10", "type": "r"}, {"name": "r_11", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_12", "type": "r"}, {"name": "r_13", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_19", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_2", "type": "r"}, {"name": "r_1", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_3", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_12", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_5", "type": "r"}, {"name": "r_9", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_6", "type": "r"}, {"name": "r_5", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_7", "type": "r"}, {"name": "r_3", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_15", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_10", "type": "r"}]}], "grammar": {"theme": "house", "names_to_exclude": [], "include_adj": false, "blend_descriptions": false, "ambiguous_instructions": false, "only_last_action": true, "blend_instructions": false, "allowed_variables_numbering": false, "unique_expansion": false}, "quests": [{"desc": "Hey, thanks for coming over to TextWorld! Please recover the sponge from the floor of the shower.", "reward": 1, "commands": ["unlock portal with key", "open portal", "go north", "take Microsoft key", "go south", "unlock Microsoft box with Microsoft key", "open Microsoft box", "take latchkey from Microsoft box", "go north", "unlock box with latchkey", "open box", "take type 0 keycard from box", "go south", "unlock type 0 gateway with type 0 keycard", "open type 0 gateway", "go south", "go south", "go south", "go east", "take sponge"], "win_events": [{"commands": ["unlock portal with key", "open portal", "go north", "take Microsoft key", "go south", "unlock Microsoft box with Microsoft key", "open Microsoft box", "take latchkey from Microsoft box", "go north", "unlock box with latchkey", "open box", "take type 0 keycard from box", "go south", "unlock type 0 gateway with type 0 keycard", "open type 0 gateway", "go south", "go south", "go south", "go east", "take sponge"], "actions": [{"name": "unlock/d", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_17", "type": "r"}, {"name": "d_2", "type": "d"}, {"name": "r_18", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_18", "type": "r"}, {"name": "d_2", "type": "d"}, {"name": "r_17", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_3", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_3", "type": "k"}, {"name": "d_2", "type": "d"}]}, {"name": "locked", "arguments": [{"name": "d_2", "type": "d"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_17", "type": "r"}, {"name": "d_2", "type": "d"}, {"name": "r_18", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_18", "type": "r"}, {"name": "d_2", "type": "d"}, {"name": "r_17", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_3", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_3", "type": "k"}, {"name": "d_2", "type": "d"}]}, {"name": "closed", "arguments": [{"name": "d_2", "type": "d"}]}], "command_template": "unlock {d_2} with {k_3}", "reverse_name": null, "reverse_command_template": "lock {d_2} with {k_3}"}, {"name": "open/d", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_17", "type": "r"}, {"name": "d_2", "type": "d"}, {"name": "r_18", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_18", "type": "r"}, {"name": "d_2", "type": "d"}, {"name": "r_17", "type": "r"}]}, {"name": "closed", "arguments": [{"name": "d_2", "type": "d"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_17", "type": "r"}, {"name": "d_2", "type": "d"}, {"name": "r_18", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_18", "type": "r"}, {"name": "d_2", "type": "d"}, {"name": "r_17", "type": "r"}]}, {"name": "open", "arguments": [{"name": "d_2", "type": "d"}]}, {"name": "free", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_18", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}], "command_template": "open {d_2}", "reverse_name": null, "reverse_command_template": "close {d_2}"}, {"name": "go/north", "preconditions": [{"name": "north_of", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_18", "type": "r"}]}, {"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_18", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_18", "type": "r"}]}], "command_template": "go north", "reverse_name": null, "reverse_command_template": "go south"}, {"name": "take", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_18", "type": "r"}]}, {"name": "at", "arguments": [{"name": "k_2", "type": "k"}, {"name": "r_18", "type": "r"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_18", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_2", "type": "k"}, {"name": "I", "type": "I"}]}], "command_template": "take {k_2}", "reverse_name": null, "reverse_command_template": "drop {k_2}"}, {"name": "go/south", "preconditions": [{"name": "north_of", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_18", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_18", "type": "r"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_18", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}], "command_template": "go south", "reverse_name": null, "reverse_command_template": "go north"}, {"name": "unlock/c", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_8", "type": "c"}, {"name": "r_17", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_2", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_2", "type": "k"}, {"name": "c_8", "type": "c"}]}, {"name": "locked", "arguments": [{"name": "c_8", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_8", "type": "c"}, {"name": "r_17", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_2", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_2", "type": "k"}, {"name": "c_8", "type": "c"}]}, {"name": "closed", "arguments": [{"name": "c_8", "type": "c"}]}], "command_template": "unlock {c_8} with {k_2}", "reverse_name": null, "reverse_command_template": "lock {c_8} with {k_2}"}, {"name": "open/c", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_8", "type": "c"}, {"name": "r_17", "type": "r"}]}, {"name": "closed", "arguments": [{"name": "c_8", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_8", "type": "c"}, {"name": "r_17", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_8", "type": "c"}]}], "command_template": "open {c_8}", "reverse_name": null, "reverse_command_template": "close {c_8}"}, {"name": "take/c", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_8", "type": "c"}, {"name": "r_17", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_8", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_1", "type": "k"}, {"name": "c_8", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_8", "type": "c"}, {"name": "r_17", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_8", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_1", "type": "k"}, {"name": "I", "type": "I"}]}], "command_template": "take {k_1} from {c_8}", "reverse_name": null, "reverse_command_template": "insert {k_1} into {c_8}"}, {"name": "go/north", "preconditions": [{"name": "north_of", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_18", "type": "r"}]}, {"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_18", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_18", "type": "r"}]}], "command_template": "go north", "reverse_name": null, "reverse_command_template": "go south"}, {"name": "unlock/c", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_18", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_6", "type": "c"}, {"name": "r_18", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_1", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_1", "type": "k"}, {"name": "c_6", "type": "c"}]}, {"name": "locked", "arguments": [{"name": "c_6", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_18", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_6", "type": "c"}, {"name": "r_18", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_1", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_1", "type": "k"}, {"name": "c_6", "type": "c"}]}, {"name": "closed", "arguments": [{"name": "c_6", "type": "c"}]}], "command_template": "unlock {c_6} with {k_1}", "reverse_name": null, "reverse_command_template": "lock {c_6} with {k_1}"}, {"name": "open/c", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_18", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_6", "type": "c"}, {"name": "r_18", "type": "r"}]}, {"name": "closed", "arguments": [{"name": "c_6", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_18", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_6", "type": "c"}, {"name": "r_18", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_6", "type": "c"}]}], "command_template": "open {c_6}", "reverse_name": null, "reverse_command_template": "close {c_6}"}, {"name": "take/c", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_18", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_6", "type": "c"}, {"name": "r_18", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_6", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "c_6", "type": "c"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_18", "type": "r"}]}, {"name": "at", "arguments": [{"name": "c_6", "type": "c"}, {"name": "r_18", "type": "r"}]}, {"name": "open", "arguments": [{"name": "c_6", "type": "c"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "I", "type": "I"}]}], "command_template": "take {k_0} from {c_6}", "reverse_name": null, "reverse_command_template": "insert {k_0} into {c_6}"}, {"name": "go/south", "preconditions": [{"name": "north_of", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_18", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_18", "type": "r"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_18", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_18", "type": "r"}, {"name": "r_17", "type": "r"}]}], "command_template": "go south", "reverse_name": null, "reverse_command_template": "go north"}, {"name": "unlock/d", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_17", "type": "r"}, {"name": "d_3", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_3", "type": "d"}, {"name": "r_17", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_0", "type": "k"}, {"name": "d_3", "type": "d"}]}, {"name": "locked", "arguments": [{"name": "d_3", "type": "d"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_17", "type": "r"}, {"name": "d_3", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_3", "type": "d"}, {"name": "r_17", "type": "r"}]}, {"name": "in", "arguments": [{"name": "k_0", "type": "k"}, {"name": "I", "type": "I"}]}, {"name": "match", "arguments": [{"name": "k_0", "type": "k"}, {"name": "d_3", "type": "d"}]}, {"name": "closed", "arguments": [{"name": "d_3", "type": "d"}]}], "command_template": "unlock {d_3} with {k_0}", "reverse_name": null, "reverse_command_template": "lock {d_3} with {k_0}"}, {"name": "open/d", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_17", "type": "r"}, {"name": "d_3", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_3", "type": "d"}, {"name": "r_17", "type": "r"}]}, {"name": "closed", "arguments": [{"name": "d_3", "type": "d"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_17", "type": "r"}, {"name": "d_3", "type": "d"}, {"name": "r_8", "type": "r"}]}, {"name": "link", "arguments": [{"name": "r_8", "type": "r"}, {"name": "d_3", "type": "d"}, {"name": "r_17", "type": "r"}]}, {"name": "open", "arguments": [{"name": "d_3", "type": "d"}]}, {"name": "free", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_17", "type": "r"}]}], "command_template": "open {d_3}", "reverse_name": null, "reverse_command_template": "close {d_3}"}, {"name": "go/south", "preconditions": [{"name": "north_of", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_17", "type": "r"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_17", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_17", "type": "r"}, {"name": "r_8", "type": "r"}]}], "command_template": "go south", "reverse_name": null, "reverse_command_template": "go north"}, {"name": "go/south", "preconditions": [{"name": "north_of", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_8", "type": "r"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_4", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_8", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_8", "type": "r"}, {"name": "r_4", "type": "r"}]}], "command_template": "go south", "reverse_name": null, "reverse_command_template": "go north"}, {"name": "go/south", "preconditions": [{"name": "north_of", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_9", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_9", "type": "r"}]}, {"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_4", "type": "r"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_9", "type": "r"}]}, {"name": "north_of", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_9", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_4", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_4", "type": "r"}, {"name": "r_9", "type": "r"}]}], "command_template": "go south", "reverse_name": null, "reverse_command_template": "go north"}, {"name": "go/east", "preconditions": [{"name": "west_of", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_10", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_10", "type": "r"}, {"name": "r_9", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_10", "type": "r"}]}, {"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_9", "type": "r"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_10", "type": "r"}]}, {"name": "west_of", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_10", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_10", "type": "r"}, {"name": "r_9", "type": "r"}]}, {"name": "free", "arguments": [{"name": "r_9", "type": "r"}, {"name": "r_10", "type": "r"}]}], "command_template": "go east", "reverse_name": null, "reverse_command_template": "go west"}, {"name": "take", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_10", "type": "r"}]}, {"name": "at", "arguments": [{"name": "o_0", "type": "o"}, {"name": "r_10", "type": "r"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_10", "type": "r"}]}, {"name": "in", "arguments": [{"name": "o_0", "type": "o"}, {"name": "I", "type": "I"}]}], "command_template": "take {o_0}", "reverse_name": null, "reverse_command_template": "drop {o_0}"}], "condition": {"name": "trigger", "preconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_10", "type": "r"}]}, {"name": "in", "arguments": [{"name": "o_0", "type": "o"}, {"name": "I", "type": "I"}]}], "postconditions": [{"name": "at", "arguments": [{"name": "P", "type": "P"}, {"name": "r_10", "type": "r"}]}, {"name": "in", "arguments": [{"name": "o_0", "type": "o"}, {"name": "I", "type": "I"}]}, {"name": "event", "arguments": [{"name": "I", "type": "I"}, {"name": "P", "type": "P"}, {"name": "o_0", "type": "o"}, {"name": "r_10", "type": "r"}]}], "command_template": null, "reverse_name": null, "reverse_command_template": null}}], "fail_events": [{"commands": [], "actions": [], "condition": {"name": "trigger", "preconditions": [{"name": "in", "arguments": [{"name": "f_0", "type": "f"}, {"name": "I", "type": "I"}]}], "postconditions": [{"name": "in", "arguments": [{"name": "f_0", "type": "f"}, {"name": "I", "type": "I"}]}, {"name": "event", "arguments": [{"name": "I", "type": "I"}, {"name": "f_0", "type": "f"}]}], "command_template": null, "reverse_name": null, "reverse_command_template": null}}], "optional": false, "repeatable": false}], "infos": [["P", {"id": "P", "type": "P", "name": null, "noun": null, "adj": null, "desc": null, "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["I", {"id": "I", "type": "I", "name": null, "noun": null, "adj": null, "desc": null, "room_type": null, "definite": null, "indefinite": null, "synonyms": null}], ["r_1", {"id": "r_1", "type": "r", "name": "attic", "noun": "attic", "adj": null, "desc": "This is going to sound unbelievable, but you've just entered an attic.\n\n You see [if c_0 is locked]a locked[else if c_0 is open]an opened[otherwise]a closed[end if] normal looking crate nearby.[if c_0 is open and there is something in the c_0] The crate contains [a list of things in the c_0]. You shudder, but continue examining the room.[end if][if c_0 is open and the c_0 contains nothing] The crate is empty! What a waste of a day![end if] You see a counter. Now why would someone leave that there? [if there is something on the s_0]You see [a list of things on the s_0] on the counter.[end if][if there is nothing on the s_0]However, the counter, like an empty counter, has nothing on it. Aw, here you were, all excited for there to be things on it![end if]\n\n There is [if d_0 is open]an open[otherwise]a closed[end if] passageway leading south. There is an exit to the west. Don't worry, it is unblocked.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["r_2", {"id": "r_2", "type": "r", "name": "kitchen", "noun": "kitchen", "adj": null, "desc": "A well framed signboard tells you that you are now in the kitchen.\n\n You can make out [if c_1 is locked]a locked[else if c_1 is open]an opened[otherwise]a closed[end if] case.[if c_1 is open and there is something in the c_1] The case contains [a list of things in the c_1].[end if][if c_1 is open and the c_1 contains nothing] The case is empty! This is the worst thing that could possibly happen, ever![end if] You make out [if c_2 is locked]a locked[else if c_2 is open]an opened[otherwise]a closed[end if] cabinet.[if c_2 is open and there is something in the c_2] The cabinet contains [a list of things in the c_2].[end if][if c_2 is open and the c_2 contains nothing] The cabinet is empty! This is the worst thing that could possibly happen, ever![end if]\n\nThere is an exit to the east. Don't worry, it is unblocked.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["r_10", {"id": "r_10", "type": "r", "name": "shower", "noun": "shower", "adj": null, "desc": "You have entered a shower. Not the shower you'd expect. No, this is a shower. You decide to just list off a complete list of everything you see in the room, because hey, why not?\n\n\n\nYou don't like doors? Why not try going east, that entranceway is unblocked. There is an unguarded exit to the north. You don't like doors? Why not try going west, that entranceway is unguarded.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["r_9", {"id": "r_9", "type": "r", "name": "study", "noun": "study", "adj": null, "desc": "This might come as a shock to you, but you've just entered a study.\n\n You can make out [if c_3 is locked]a locked[else if c_3 is open]an opened[otherwise]a closed[end if] coffer.[if c_3 is open and there is something in the c_3] The coffer contains [a list of things in the c_3].[end if][if c_3 is open and the c_3 contains nothing] What a letdown! The coffer is empty![end if] If you haven't noticed it already, there seems to be something there by the wall, it's a suitcase. There's something strange about this being here, but you can't put your finger on it.[if c_4 is open and there is something in the c_4] The suitcase contains [a list of things in the c_4].[end if][if c_4 is open and the c_4 contains nothing] The suitcase is empty! This is the worst thing that could possibly happen, ever![end if] You lean against the wall, inadvertently pressing a secret button. The wall opens up to reveal a mantelpiece. [if there is something on the s_1]You see [a list of things on the s_1] on the mantelpiece.[end if][if there is nothing on the s_1]The mantelpiece appears to be empty.[end if] You can make out a desk. The desk is typical.[if there is something on the s_2] On the desk you make out [a list of things on the s_2].[end if][if there is nothing on the s_2] But the thing is empty, unfortunately.[end if]\n\nYou need an unguarded exit? You should try going east. There is an exit to the north. Don't worry, it is unblocked. There is an unblocked exit to the west.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["r_11", {"id": "r_11", "type": "r", "name": "closet", "noun": "closet", "adj": null, "desc": "You are in a closet. An usual kind of place. You try to gain information on your surroundings by using a technique you call 'looking.'\n\n\n\nThere is an exit to the north. Don't worry, it is unguarded. There is an exit to the west. Don't worry, it is unblocked.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["r_12", {"id": "r_12", "type": "r", "name": "cubicle", "noun": "cubicle", "adj": null, "desc": "You find yourself in a cubicle. A normal kind of place. You decide to just list off a complete list of everything you see in the room, because hey, why not?\n\n\n\nYou don't like doors? Why not try going east, that entranceway is unguarded. You need an unguarded exit? You should try going north. There is an exit to the south. Don't worry, it is unguarded. You don't like doors? Why not try going west, that entranceway is unblocked.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["r_4", {"id": "r_4", "type": "r", "name": "launderette", "noun": "launderette", "adj": null, "desc": "Well how about that, you are in the place we're calling the launderette.\n\n You see a table. [if there is something on the s_3]You see [a list of things on the s_3] on the table, so there's that.[end if][if there is nothing on the s_3]Looks like someone's already been here and taken everything off it, though. Hm. Oh well[end if] You can see a rack. The rack is normal.[if there is something on the s_4] On the rack you see [a list of things on the s_4].[end if][if there is nothing on the s_4] The rack appears to be empty.[end if]\n\nThere is an unguarded exit to the east. You need an unguarded exit? You should try going north. You need an unblocked exit? You should try going south. There is an exit to the west. Don't worry, it is unblocked.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["r_13", {"id": "r_13", "type": "r", "name": "lounge", "noun": "lounge", "adj": null, "desc": "You've just walked into a lounge.\n\n\n\nThere is an unblocked exit to the north. You don't like doors? Why not try going south, that entranceway is unguarded. You need an unguarded exit? You should try going west.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["r_15", {"id": "r_15", "type": "r", "name": "kitchenette", "noun": "kitchenette", "adj": null, "desc": "You've just sauntered into a kitchenette. I guess you better just go and list everything you see here.\n\n\n\n There is [if d_1 is open]an open[otherwise]a closed[end if] hatch leading west. There is an unblocked exit to the north. You need an unguarded exit? You should try going south.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["r_8", {"id": "r_8", "type": "r", "name": "bathroom", "noun": "bathroom", "adj": null, "desc": "Well, here we are in a bathroom.\n\n You make out a drawer.[if c_5 is open and there is something in the c_5] The drawer contains [a list of things in the c_5].[end if][if c_5 is open and the c_5 contains nothing] The drawer is empty! What a waste of a day![end if]\n\n There is [if d_3 is open]an open[otherwise]a closed[end if] type 0 gateway leading north. There is [if d_1 is open]an open[otherwise]a closed[end if] hatch leading east. There is an unblocked exit to the south.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["r_19", {"id": "r_19", "type": "r", "name": "pantry", "noun": "pantry", "adj": null, "desc": "Look around you. Take it all in. It's not every day someone gets to be in a pantry.\n\n You scan the room for a shelf, and you find a shelf. Make a note of this, you might have to put stuff on or in it later on. The shelf is normal.[if there is something on the s_5] On the shelf you see [a list of things on the s_5].[end if][if there is nothing on the s_5] But oh no! there's nothing on this piece of junk.[end if]\n\nYou don't like doors? Why not try going west, that entranceway is unblocked.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["r_18", {"id": "r_18", "type": "r", "name": "canteen", "noun": "canteen", "adj": null, "desc": "This is going to sound unbelievable, but you've just entered a canteen. I guess you better just go and list everything you see here.\n\n You make out a box.[if c_6 is open and there is something in the c_6] The box contains [a list of things in the c_6].[end if][if c_6 is open and the c_6 contains nothing] The box is empty! This is the worst thing that could possibly happen, ever![end if]\n\n There is [if d_2 is open]an open[otherwise]a closed[end if] portal leading south. There is an unblocked exit to the east.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["r_3", {"id": "r_3", "type": "r", "name": "dish-pit", "noun": "dish-pit", "adj": null, "desc": "You're now in the dish-pit.\n\n You make out a board! [if there is something on the s_6]On the board you make out [a list of things on the s_6].[end if][if there is nothing on the s_6]But the thing is empty. Aw, here you were, all excited for there to be things on it![end if]\n\n There is [if d_4 is open]an open[otherwise]a closed[end if] door leading north. You don't like doors? Why not try going east, that entranceway is unblocked. You don't like doors? Why not try going south, that entranceway is unblocked. There is an exit to the west. Don't worry, it is unblocked.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["r_7", {"id": "r_7", "type": "r", "name": "playroom", "noun": "playroom", "adj": null, "desc": "You find yourself in a playroom. An ordinary kind of place.\n\n You can make out a bench. The bench is usual.[if there is something on the s_7] On the bench you can see [a list of things on the s_7]. It doesn't get more TextWorld than this![end if][if there is nothing on the s_7] Looks like someone's already been here and taken everything off it, though.[end if]\n\nYou don't like doors? Why not try going east, that entranceway is unblocked. You need an unblocked exit? You should try going south.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["r_5", {"id": "r_5", "type": "r", "name": "workshop", "noun": "workshop", "adj": null, "desc": "Look at that sign! What does it say? It says Welcome to the workshop? Well that's cool.\n\n You can see [if c_7 is locked]a locked[else if c_7 is open]an opened[otherwise]a closed[end if] trunk.[if c_7 is open and there is something in the c_7] The trunk contains [a list of things in the c_7].[end if][if c_7 is open and the c_7 contains nothing] What a letdown! The trunk is empty![end if] You scan the room for a bookshelf, and you find a bookshelf. The bookshelf is usual.[if there is something on the s_8] On the bookshelf you see [a list of things on the s_8].[end if][if there is nothing on the s_8] But the thing is empty.[end if]\n\nYou don't like doors? Why not try going east, that entranceway is unblocked. You don't like doors? Why not try going north, that entranceway is unguarded. There is an unguarded exit to the west.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["r_6", {"id": "r_6", "type": "r", "name": "bedroom", "noun": "bedroom", "adj": null, "desc": "You are in a bedroom. You decide to just list off a complete list of everything you see in the room, because hey, why not?\n\n\n\nYou need an unguarded exit? You should try going east. You need an unblocked exit? You should try going north.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["r_0", {"id": "r_0", "type": "r", "name": "basement", "noun": "basement", "adj": null, "desc": "You are in a basement. A typical one. You begin to take stock of what's in the room.\n\n\n\n There is [if d_0 is open]an open[otherwise]a closed[end if] passageway leading north. There is [if d_4 is open]an open[otherwise]a closed[end if] door leading south.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["r_14", {"id": "r_14", "type": "r", "name": "laundromat", "noun": "laundromat", "adj": null, "desc": "Fancy seeing you here. Here, by the way, being the laundromat.\n\n You see a dusty bench. [if there is something on the s_9]On the dusty bench you can make out [a list of things on the s_9].[end if][if there is nothing on the s_9]But the thing hasn't got anything on it. It would have been so cool if there was stuff on the bench! oh well.[end if]\n\nThere is an unguarded exit to the south.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["r_16", {"id": "r_16", "type": "r", "name": "parlor", "noun": "parlor", "adj": null, "desc": "You are in a parlor. A standard kind of place.\n\n You make out a bed stand. [if there is something on the s_10]You see [a list of things on the s_10] on the bed stand. There's something strange about this thing being here, but you don't have time to worry about that now.[end if][if there is nothing on the s_10]But the thing is empty, unfortunately.[end if]\n\nThere is an unblocked exit to the south.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["r_17", {"id": "r_17", "type": "r", "name": "laundry place", "noun": "laundry place", "adj": null, "desc": "You are in a laundry place. An ordinary one.\n\n You see a Microsoft box. There's something strange about this being here, but you can't put your finger on it.[if c_8 is open and there is something in the c_8] The Microsoft box contains [a list of things in the c_8]. There's something strange about this being here, but you can't put your finger on it.[end if][if c_8 is open and the c_8 contains nothing] The Microsoft box is empty! What a waste of a day![end if]\n\n There is [if d_2 is open]an open[otherwise]a closed[end if] portal leading north. There is [if d_3 is open]an open[otherwise]a closed[end if] type 0 gateway leading south.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["d_0", {"id": "d_0", "type": "d", "name": "passageway", "noun": "passageway", "adj": null, "desc": "The passageway looks sturdy. [if open]You can see inside it.[else if closed]You can't see inside it because the lid's in your way.[otherwise]There is a lock on it.[end if]", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["d_4", {"id": "d_4", "type": "d", "name": "door", "noun": "door", "adj": null, "desc": "The door looks stuffy. [if open]You can see inside it.[else if closed]You can't see inside it because the lid's in your way.[otherwise]There is a lock on it.[end if]", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["d_1", {"id": "d_1", "type": "d", "name": "hatch", "noun": "hatch", "adj": null, "desc": "The hatch looks commanding. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["d_2", {"id": "d_2", "type": "d", "name": "portal", "noun": "portal", "adj": null, "desc": "it is what it is, a portal [if open]You can see inside it.[else if closed]You can't see inside it because the lid's in your way.[otherwise]There is a lock on it.[end if]", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["d_3", {"id": "d_3", "type": "d", "name": "type 0 gateway", "noun": "type 0 gateway", "adj": null, "desc": "it's a solid type 0 gateway [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["c_0", {"id": "c_0", "type": "c", "name": "crate", "noun": "crate", "adj": null, "desc": "The crate looks strong, and impossible to break. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["c_1", {"id": "c_1", "type": "c", "name": "case", "noun": "case", "adj": null, "desc": "The case looks strong, and impossible to crack. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["c_2", {"id": "c_2", "type": "c", "name": "cabinet", "noun": "cabinet", "adj": null, "desc": "The cabinet looks strong, and impossible to crack. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["c_3", {"id": "c_3", "type": "c", "name": "coffer", "noun": "coffer", "adj": null, "desc": "The coffer looks strong, and impossible to crack. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["c_4", {"id": "c_4", "type": "c", "name": "suitcase", "noun": "suitcase", "adj": null, "desc": "The suitcase looks strong, and impossible to crack. [if open]You can see inside it.[else if closed]You can't see inside it because the lid's in your way.[otherwise]There is a lock on it.[end if]", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["c_5", {"id": "c_5", "type": "c", "name": "drawer", "noun": "drawer", "adj": null, "desc": "The drawer looks strong, and impossible to break. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["c_6", {"id": "c_6", "type": "c", "name": "box", "noun": "box", "adj": null, "desc": "The box looks strong, and impossible to destroy. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["c_7", {"id": "c_7", "type": "c", "name": "trunk", "noun": "trunk", "adj": null, "desc": "The trunk looks strong, and impossible to crack. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["c_8", {"id": "c_8", "type": "c", "name": "Microsoft box", "noun": "Microsoft box", "adj": null, "desc": "The Microsoft box looks strong, and impossible to break. [if open]It is open.[else if closed]It is closed.[otherwise]It is locked.[end if]", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["f_0", {"id": "f_0", "type": "f", "name": "apple", "noun": "apple", "adj": null, "desc": "You couldn't pay me to eat that ordinary thing.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["k_2", {"id": "k_2", "type": "k", "name": "Microsoft key", "noun": "Microsoft key", "adj": null, "desc": "The metal of the Microsoft key is hammered.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["o_0", {"id": "o_0", "type": "o", "name": "sponge", "noun": "sponge", "adj": null, "desc": "The sponge is expensive looking.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["s_0", {"id": "s_0", "type": "s", "name": "counter", "noun": "counter", "adj": null, "desc": "The counter is reliable.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["s_1", {"id": "s_1", "type": "s", "name": "mantelpiece", "noun": "mantelpiece", "adj": null, "desc": "The mantelpiece is undependable.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["s_10", {"id": "s_10", "type": "s", "name": "bed stand", "noun": "bed stand", "adj": null, "desc": "The bed stand is wobbly.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["s_2", {"id": "s_2", "type": "s", "name": "desk", "noun": "desk", "adj": null, "desc": "The desk is stable.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["s_3", {"id": "s_3", "type": "s", "name": "table", "noun": "table", "adj": null, "desc": "The table is stable.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["s_4", {"id": "s_4", "type": "s", "name": "rack", "noun": "rack", "adj": null, "desc": "The rack is shaky.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["s_5", {"id": "s_5", "type": "s", "name": "shelf", "noun": "shelf", "adj": null, "desc": "The shelf is wobbly.", "room_type": "storage", "definite": null, "indefinite": null, "synonyms": null}], ["s_6", {"id": "s_6", "type": "s", "name": "board", "noun": "board", "adj": null, "desc": "The board is unstable.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["s_7", {"id": "s_7", "type": "s", "name": "bench", "noun": "bench", "adj": null, "desc": "The bench is stable.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}], ["s_8", {"id": "s_8", "type": "s", "name": "bookshelf", "noun": "bookshelf", "adj": null, "desc": "The bookshelf is durable.", "room_type": "work", "definite": null, "indefinite": null, "synonyms": null}], ["s_9", {"id": "s_9", "type": "s", "name": "dusty bench", "noun": "bench", "adj": "dusty", "desc": "The dusty bench is solidly built.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["k_0", {"id": "k_0", "type": "k", "name": "type 0 keycard", "noun": "type 0 keycard", "adj": null, "desc": "The metal of the type 0 keycard is hammered.", "room_type": "cook", "definite": null, "indefinite": null, "synonyms": null}], ["k_1", {"id": "k_1", "type": "k", "name": "latchkey", "noun": "latchkey", "adj": null, "desc": "The latchkey is surprisingly heavy.", "room_type": "clean", "definite": null, "indefinite": null, "synonyms": null}], ["k_3", {"id": "k_3", "type": "k", "name": "key", "noun": "key", "adj": null, "desc": "The metal of the key is hammered.", "room_type": "rest", "definite": null, "indefinite": null, "synonyms": null}]], "KB": {"logic": "# food\ntype f : o {\n    predicates {\n        edible(f);\n        eaten(f);\n    }\n\n    rules {\n        eat :: in(f, I) -> eaten(f);\n    }\n\n    constraints {\n        eaten1 :: eaten(f) & in(f, I) -> fail();\n        eaten2 :: eaten(f) & in(f, c) -> fail();\n        eaten3 :: eaten(f) & on(f, s) -> fail();\n        eaten4 :: eaten(f) & at(f, r) -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"food\";\n            definition :: \"food is edible.\";\n        }\n\n        predicates {\n            edible(f) :: \"The {f} is edible\";\n            eaten(f) :: \"The {f} is nowhere\";\n        }\n\n        commands {\n            eat :: \"eat {f}\" :: \"eating the {f}\";\n        }\n    }\n}\n\n# container\ntype c : t {\n    predicates {\n        open(c);\n        closed(c);\n        locked(c);\n\n        in(o, c);\n    }\n\n    rules {\n        lock/c   :: $at(P, r) & $at(c, r) & $in(k, I) & $match(k, c) & closed(c) -> locked(c);\n        unlock/c :: $at(P, r) & $at(c, r) & $in(k, I) & $match(k, c) & locked(c) -> closed(c);\n\n        open/c  :: $at(P, r) & $at(c, r) & closed(c) -> open(c);\n        close/c :: $at(P, r) & $at(c, r) & open(c) -> closed(c);\n    }\n\n    reverse_rules {\n        lock/c :: unlock/c;\n        open/c :: close/c;\n    }\n\n    constraints {\n        c1 :: open(c)   & closed(c) -> fail();\n        c2 :: open(c)   & locked(c) -> fail();\n        c3 :: closed(c) & locked(c) -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"container\";\n            definition :: \"containers are openable, lockable and fixed in place. containers are usually closed.\";\n        }\n\n        predicates {\n            open(c) :: \"The {c} is open\";\n            closed(c) :: \"The {c} is closed\";\n            locked(c) :: \"The {c} is locked\";\n\n            in(o, c) :: \"The {o} is in the {c}\";\n        }\n\n        commands {\n            open/c :: \"open {c}\" :: \"opening the {c}\";\n            close/c :: \"close {c}\" :: \"closing the {c}\";\n\n            lock/c :: \"lock {c} with {k}\" :: \"locking the {c} with the {k}\";\n            unlock/c :: \"unlock {c} with {k}\" :: \"unlocking the {c} with the {k}\";\n        }\n    }\n}\n\n# Player\ntype P {\n    rules {\n        look :: at(P, r) -> at(P, r);  # Nothing changes.\n    }\n\n    reverse_rules {\n        look :: look;\n    }\n\n    inform7 {\n        commands {\n            look :: \"look\" :: \"looking\";\n        }\n    }\n}\n\n# key\ntype k : o {\n    predicates {\n        match(k, c);\n        match(k, d);\n    }\n\n    constraints {\n        k1 :: match(k, c) & match(k', c) -> fail();\n        k2 :: match(k, c) & match(k, c') -> fail();\n        k3 :: match(k, d) & match(k', d) -> fail();\n        k4 :: match(k, d) & match(k, d') -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"key\";\n        }\n\n        predicates {\n            match(k, c) :: \"The matching key of the {c} is the {k}\";\n            match(k, d) :: \"The matching key of the {d} is the {k}\";\n        }\n    }\n}\n\n# room\ntype r {\n    predicates {\n        at(P, r);\n        at(t, r);\n\n        north_of(r, r);\n        west_of(r, r);\n\n        north_of/d(r, d, r);\n        west_of/d(r, d, r);\n\n        free(r, r);\n\n        south_of(r, r') = north_of(r', r);\n        east_of(r, r') = west_of(r', r);\n\n        south_of/d(r, d, r') = north_of/d(r', d, r);\n        east_of/d(r, d, r') = west_of/d(r', d, r);\n    }\n\n    rules {\n        go/north :: at(P, r) & $north_of(r', r) & $free(r, r') & $free(r', r) -> at(P, r');\n        go/south :: at(P, r) & $south_of(r', r) & $free(r, r') & $free(r', r) -> at(P, r');\n        go/east  :: at(P, r) & $east_of(r', r) & $free(r, r') & $free(r', r) -> at(P, r');\n        go/west  :: at(P, r) & $west_of(r', r) & $free(r, r') & $free(r', r) -> at(P, r');\n    }\n\n    reverse_rules {\n        go/north :: go/south;\n        go/west :: go/east;\n    }\n\n    constraints {\n        r1 :: at(P, r) & at(P, r') -> fail();\n        r2 :: at(s, r) & at(s, r') -> fail();\n        r3 :: at(c, r) & at(c, r') -> fail();\n\n        # An exit direction can only lead to one room.\n        nav_rr1 :: north_of(r, r') & north_of(r'', r') -> fail();\n        nav_rr2 :: south_of(r, r') & south_of(r'', r') -> fail();\n        nav_rr3 :: east_of(r, r') & east_of(r'', r') -> fail();\n        nav_rr4 :: west_of(r, r') & west_of(r'', r') -> fail();\n\n        # Two rooms can only be connected once with each other.\n        nav_rrA :: north_of(r, r') & south_of(r, r') -> fail();\n        nav_rrB :: north_of(r, r') & west_of(r, r') -> fail();\n        nav_rrC :: north_of(r, r') & east_of(r, r') -> fail();\n        nav_rrD :: south_of(r, r') & west_of(r, r') -> fail();\n        nav_rrE :: south_of(r, r') & east_of(r, r') -> fail();\n        nav_rrF :: west_of(r, r')  & east_of(r, r') -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"room\";\n        }\n\n        predicates {\n            at(P, r) :: \"The player is in {r}\";\n            at(t, r) :: \"The {t} is in {r}\";\n            free(r, r') :: \"\";  # No equivalent in Inform7.\n\n            north_of(r, r') :: \"The {r} is mapped north of {r'}\";\n            south_of(r, r') :: \"The {r} is mapped south of {r'}\";\n            east_of(r, r') :: \"The {r} is mapped east of {r'}\";\n            west_of(r, r') :: \"The {r} is mapped west of {r'}\";\n\n            north_of/d(r, d, r') :: \"South of {r} and north of {r'} is a door called {d}\";\n            south_of/d(r, d, r') :: \"North of {r} and south of {r'} is a door called {d}\";\n            east_of/d(r, d, r') :: \"West of {r} and east of {r'} is a door called {d}\";\n            west_of/d(r, d, r') :: \"East of {r} and west of {r'} is a door called {d}\";\n        }\n\n        commands {\n            go/north :: \"go north\" :: \"going north\";\n            go/south :: \"go south\" :: \"going south\";\n            go/east :: \"go east\" :: \"going east\";\n            go/west :: \"go west\" :: \"going west\";\n        }\n    }\n}\n\n# Inventory\ntype I {\n    predicates {\n        in(o, I);\n    }\n\n    rules {\n        inventory :: at(P, r) -> at(P, r);  # Nothing changes.\n\n        take :: $at(P, r) & at(o, r) -> in(o, I);\n        drop :: $at(P, r) & in(o, I) -> at(o, r);\n\n        take/c :: $at(P, r) & $at(c, r) & $open(c) & in(o, c) -> in(o, I);\n        insert :: $at(P, r) & $at(c, r) & $open(c) & in(o, I) -> in(o, c);\n\n        take/s :: $at(P, r) & $at(s, r) & on(o, s) -> in(o, I);\n        put    :: $at(P, r) & $at(s, r) & in(o, I) -> on(o, s);\n\n        examine/I :: in(o, I) -> in(o, I);  # Nothing changes.\n        examine/s :: at(P, r) & $at(s, r) & $on(o, s) -> at(P, r);  # Nothing changes.\n        examine/c :: at(P, r) & $at(c, r) & $open(c) & $in(o, c) -> at(P, r);  # Nothing changes.\n    }\n\n    reverse_rules {\n        inventory :: inventory;\n\n        take :: drop;\n        take/c :: insert;\n        take/s :: put;\n\n        examine/I :: examine/I;\n        examine/s :: examine/s;\n        examine/c :: examine/c;\n    }\n\n    inform7 {\n        predicates {\n            in(o, I) :: \"The player carries the {o}\";\n        }\n\n        commands {\n            take :: \"take {o}\" :: \"taking the {o}\";\n            drop :: \"drop {o}\" :: \"dropping the {o}\";\n\n            take/c :: \"take {o} from {c}\" :: \"removing the {o} from the {c}\";\n            insert :: \"insert {o} into {c}\" :: \"inserting the {o} into the {c}\";\n\n            take/s :: \"take {o} from {s}\" :: \"removing the {o} from the {s}\";\n            put :: \"put {o} on {s}\" :: \"putting the {o} on the {s}\";\n\n            inventory :: \"inventory\" :: \"taking inventory\";\n\n            examine/I :: \"examine {o}\" :: \"examining the {o}\";\n            examine/s :: \"examine {o}\" :: \"examining the {o}\";\n            examine/c :: \"examine {o}\" :: \"examining the {o}\";\n        }\n    }\n}\n\n# door\ntype d : t {\n    predicates {\n        open(d);\n        closed(d);\n        locked(d);\n\n        link(r, d, r);\n    }\n\n    rules {\n        lock/d   :: $at(P, r) & $link(r, d, r') & $link(r', d, r) & $in(k, I) & $match(k, d) & closed(d) -> locked(d);\n        unlock/d :: $at(P, r) & $link(r, d, r') & $link(r', d, r) & $in(k, I) & $match(k, d) & locked(d) -> closed(d);\n\n        open/d   :: $at(P, r) & $link(r, d, r') & $link(r', d, r) & closed(d) -> open(d) & free(r, r') & free(r', r);\n        close/d  :: $at(P, r) & $link(r, d, r') & $link(r', d, r) & open(d) & free(r, r') & free(r', r) -> closed(d);\n\n        examine/d :: at(P, r) & $link(r, d, r') -> at(P, r);  # Nothing changes.\n    }\n\n    reverse_rules {\n        lock/d :: unlock/d;\n        open/d :: close/d;\n\n        examine/d :: examine/d;\n    }\n\n    constraints {\n        d1 :: open(d)   & closed(d) -> fail();\n        d2 :: open(d)   & locked(d) -> fail();\n        d3 :: closed(d) & locked(d) -> fail();\n\n        # A door can't be used to link more than two rooms.\n        link1 :: link(r, d, r') & link(r, d, r'') -> fail();\n        link2 :: link(r, d, r') & link(r'', d, r''') -> fail();\n\n        # There's already a door linking two rooms.\n        link3 :: link(r, d, r') & link(r, d', r') -> fail();\n\n        # There cannot be more than four doors in a room.\n        too_many_doors :: link(r, d1: d, r1: r) & link(r, d2: d, r2: r) & link(r, d3: d, r3: r) & link(r, d4: d, r4: r) & link(r, d5: d, r5: r) -> fail();\n\n        # There cannot be more than four doors in a room.\n        dr1 :: free(r, r1: r) & link(r, d2: d, r2: r) & link(r, d3: d, r3: r) & link(r, d4: d, r4: r) & link(r, d5: d, r5: r) -> fail();\n        dr2 :: free(r, r1: r) & free(r, r2: r) & link(r, d3: d, r3: r) & link(r, d4: d, r4: r) & link(r, d5: d, r5: r) -> fail();\n        dr3 :: free(r, r1: r) & free(r, r2: r) & free(r, r3: r) & link(r, d4: d, r4: r) & link(r, d5: d, r5: r) -> fail();\n        dr4 :: free(r, r1: r) & free(r, r2: r) & free(r, r3: r) & free(r, r4: r) & link(r, d5: d, r5: r) -> fail();\n\n        free1 :: link(r, d, r') & free(r, r') & closed(d) -> fail();\n        free2 :: link(r, d, r') & free(r, r') & locked(d) -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"door\";\n            definition :: \"door is openable and lockable.\";\n        }\n\n        predicates {\n            open(d) :: \"The {d} is open\";\n            closed(d) :: \"The {d} is closed\";\n            locked(d) :: \"The {d} is locked\";\n            link(r, d, r') :: \"\";  # No equivalent in Inform7.\n        }\n\n        commands {\n            open/d :: \"open {d}\" :: \"opening {d}\";\n            close/d :: \"close {d}\" :: \"closing {d}\";\n\n            unlock/d :: \"unlock {d} with {k}\" :: \"unlocking {d} with the {k}\";\n            lock/d :: \"lock {d} with {k}\" :: \"locking {d} with the {k}\";\n\n            examine/d :: \"examine {d}\" :: \"examining {d}\";\n        }\n    }\n}\n\n# supporter\ntype s : t {\n    predicates {\n        on(o, s);\n    }\n\n    inform7 {\n        type {\n            kind :: \"supporter\";\n            definition :: \"supporters are fixed in place.\";\n        }\n\n        predicates {\n            on(o, s) :: \"The {o} is on the {s}\";\n        }\n    }\n}\n\n# object\ntype o : t {\n    constraints {\n        obj1 :: in(o, I) & in(o, c) -> fail();\n        obj2 :: in(o, I) & on(o, s) -> fail();\n        obj3 :: in(o, I) & at(o, r) -> fail();\n        obj4 :: in(o, c) & on(o, s) -> fail();\n        obj5 :: in(o, c) & at(o, r) -> fail();\n        obj6 :: on(o, s) & at(o, r) -> fail();\n        obj7 :: at(o, r) & at(o, r') -> fail();\n        obj8 :: in(o, c) & in(o, c') -> fail();\n        obj9 :: on(o, s) & on(o, s') -> fail();\n    }\n\n    inform7 {\n        type {\n            kind :: \"object-like\";\n            definition :: \"object-like is portable.\";\n        }\n    }\n}\n\n# thing\ntype t {\n    rules {\n        examine/t :: at(P, r) & $at(t, r) -> at(P, r);\n    }\n\n    reverse_rules {\n        examine/t :: examine/t;\n    }\n\n    inform7 {\n        type {\n            kind :: \"thing\";\n        }\n\n        commands {\n            examine/t :: \"examine {t}\" :: \"examining the {t}\";\n        }\n    }\n}\n\n", "text_grammars_path": "/home/ubuntu/.local/lib/python3.10/site-packages/textworld/generator/data/text_grammars"}, "metadata": {"walkthrough": ["unlock portal with key", "open portal", "go north", "take Microsoft key", "go south", "unlock Microsoft box with Microsoft key", "open Microsoft box", "take latchkey from Microsoft box", "go north", "unlock box with latchkey", "open box", "take type 0 keycard from box", "go south", "unlock type 0 gateway with type 0 keycard", "open type 0 gateway", "go south", "go south", "go south", "go east", "take sponge"], "desc": "Treasure Hunter", "mode": "hard", "seeds": {"map": 52083, "objects": 18206, "quest": 57121, "grammar": 15799}, "world_size": 20, "quest_length": 20, "uuid": "tw-treasure_hunter-pPIRhn-house-GjW-yb2mubDytDYqh8Mq"}, "objective": "Your objective is to retrieve the sponge from the floor of the shower."}